from typing import List

class Solution:
    def maxArea(self, heights: List[int]) -> int:
        res=0
        # 1,7,2,5,4,7,3,6
        # min(1,7)*[1-0]=1*1=1
        # min(1,2)*(2-0)=1*2=2
        for i in range(len(heights)):
            for j in range(i+1,len(heights)):
                res = max(res , min(heights[i],heights[j])*(j-i))
        return res
    
    #Solving by two pointer
    def maxAreaPointer(self,heights:List[int])->int:
        l,r= 0,len(heights)-1
        res=0
        while l<r:
            area = min(heights[l],heights[r])*(r-l)
            res=max(res,area)
            if heights[l]<=heights[r]:
                l+=1
            else:
                r-=1
        return res



if __name__=="__main__":
    sol=Solution()
    heights=[1,7,2,5,4,7,3,6]
    ans=sol.maxArea(heights)
    ans1=sol.maxAreaPointer(heights)
    print(ans1)